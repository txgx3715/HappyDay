1.wx：if

在框架中，使用 wx:if="" 来判断是否需要渲染该代码块：

<view wx:if="{{condition}}"> True </view>         (condition 计算结果用作条件的表达式)

也可以用 wx:elif 和 wx:else 来添加一个 else 块：

<view wx:if="{{length > 5}}"> 1 </view>
<view wx:elif="{{length > 2}}"> 2 </view>
<view wx:else> 3 </view>

2.block wx:if

因为 wx:if 是一个控制属性，需要将它添加到一个标签上。
如果要一次性判断多个组件标签，可以使用一个 <block/> 标签将多个组件包装起来，并在上边使用 wx:if 控制属性。

<block wx:if="{{true}}">
  <view> view1 </view>
  <view> view2 </view>
</block>

注意： <block/> 并不是一个组件，它仅仅是一个包装元素，不会在页面中做任何渲染，只接受控制属性。

3.hidden

标签隐藏
  1.直接在标签中加入hidden
  2.hidden = "{{boolean}}"   Boolean值，通过true/false决定标签是否显示
  
<view hidden>hidden1</view>
<view hidden="{{false}}">hidden2</view>

hidden演示，其中hidden1被隐藏，hidden2没有隐藏


//hidden在使用过程中需要注意的地方： hidden属性不要和样式display一起使用，display会覆盖hidden部分的代码
<view hidden style="display: flex;">
HTML
<!--从调试器从便可发现端倪，其被覆盖掉了-->
</view>




wx:if 与 hidden 之间的对比

因为 wx:if 之中的模板也可能包含数据绑定，所以当 wx:if 的条件值切换时，框架有一个局部渲染的过程，因为它会确保条件块在切换时销毁或重新渲染。

同时 wx:if 也是惰性的，如果在初始渲染条件为 false，框架什么也不做，在条件第一次变成真的时候才开始局部渲染。

相比之下，hidden 就简单的多，组件始终会被渲染，只是简单的控制显示与隐藏。

一般来说，wx:if 有更高的切换消耗而 hidden 有更高的初始渲染消耗。因此，如果需要频繁切换的情景下，用 hidden 更好，如果在运行时条件不大可能改变则 wx:if 较好。
